---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import {getSearchList} from "../../../utils/getSearchList";
import Fuse from "fuse.js";
const url = Astro.url;

---
<BaseLayout title="Search" description="Search the garden">
    <h1>search: <span id="query"></span></h1>
    <ol id="results">Searching...</ol>
</BaseLayout>
<script>
    import Fuse from 'fuse.js'
    import {getSearchList} from "@utils/getSearchList";
    const fuseOptions = {
        // isCaseSensitive: false,
        includeScore: true, // default false
        // ignoreDiacritics: false,
        // shouldSort: true,
        // includeMatches: false,
        // findAllMatches: false,
        // minMatchCharLength: 1,
        // location: 0,
        threshold: 0.2, // default 0.6
        // distance: 100,
        // useExtendedSearch: false,
        // ignoreLocation: false,
        // ignoreFieldNorm: false,
        // fieldNormWeight: 1,
        keys: [
            "title",
            "description",
            "slug",
            "tags"
        ]
    }
    const list = (await getSearchList());
    const fuse = new Fuse(list, fuseOptions);

    const url = new URL(window.location.href);
    const query = url.searchParams.get("q");
    document.getElementById("query").innerText = query;
    const results = fuse.search(query)

    const mapCollectionToName = (collection: string) => {
        switch (collection) {
            case "garden":
                return "note"
            case "books":
                return "book"
            case "links":
                return "link"
        }
    }

    const html = "";
    document.getElementById("results").innerHTML = results.map(item => {
        let html = "";
        html = `${html}<li class="result"><a href="/garden/plant/${item.item.slug}">${item.item.title}</a><span class="collection">${mapCollectionToName(item.item.collection)}</span>`;
        if(item.item.description){
            html = `${html}<p>${item.item.description}</p>`;
        }
        if(item.item.tags){
            html = `${html}<p class="tags">${item.item.tags?.map(tag => `<a href="/garden/tag/${tag}">${tag}</a>`)}</p>`
        }
        html = `${html}</li>`
        return html;

    }).join("");

</script>

<style is:global>
    #results {
        margin: 0;
    }

    #results .collection {
        font-size: .8rem;
        margin-left: 1rem;
        text-transform: uppercase;
        background: var(--big-blue);
        color: white;
        padding: 0 .2rem;
    }

    #results li {
        margin-bottom: 1rem;
    }

    #results li p {
        margin: 0 0 .4rem 0;
        font-size: 1rem;
    }

    #results .tags {
        font-size: .8rem;
    }
</style>