---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from "@layouts/BaseLayout.astro";
import {convertISOToMMMDDYYYY} from "@utils/time";
import PlantTag from "@components/PlantTag/PlantTag.astro";
import GardenBreadcrumbs from "@components/GardenBreadcrumbs/GardenBreadcrumbs.astro";
import {getAllGardenContent} from "../../../utils/getAllGardenContent";
import Prose from "../../../components/Prose/Prose.astro";
import BookHeader from "../../../components/BookHeader/BookHeader.astro";

export async function getStaticPaths() {
    const posts = await getAllGardenContent();

    return posts.content.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }));
}

const post = Astro.props;

const isBook = post.collection === "books"
const { Content, remarkPluginFrontmatter } = await post.render();
---

<BaseLayout description={post.data.description} image={post.data.description} title={post.data.title}>

    <GardenBreadcrumbs />
    <Prose>
        {isBook && <BookHeader book={post} />}
        <Content />
    </Prose>
    <hr />
    <PlantTag tags={post.data.tags} />
    <p class="file-details">
        <span class="time">Created:</span> {convertISOToMMMDDYYYY(remarkPluginFrontmatter.createdDate)}, <span class="time">Last updated:</span> {convertISOToMMMDDYYYY(remarkPluginFrontmatter.modifiedDate)}
    </p>
</BaseLayout>

<style>
    .prose {
        width: 720px;
        max-width: 100%;
        margin: 0 auto;
    }
    .garden {
        font-size: .8rem;
        font-style: italic;
    }

    .file-details {
        font-size: .8rem;
        font-weight: bold;
        text-transform: uppercase;

    }

    .tags {
        margin-top: 4rem;
    }

    .time {
        color: var(--tag);

    }

    ul {
        list-style: none;
        margin: 0;
        padding: 0;
        display: flex;
    }

    :global(.prose ul li p) {
        margin: 0;
    }

</style>
