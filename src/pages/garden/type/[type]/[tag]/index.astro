---
import {getCollection} from "astro:content";

import GardenBreadcrumbs from "@components/GardenBreadcrumbs/GardenBreadcrumbs.astro";
import {getTags} from "@utils/getAllGardenContent";
import GardenLayout from "@layouts/GardenLayout.astro";
import AllPreviews from "../../../../../components/GardenPreviews/AllPreviews.astro";

export async function getStaticPaths() {
    const types = ['book', 'note', 'blog', 'recipe', 'link', 'research']

    const cats = [];
    for (const type of types) {
        let posts = []
        let tags = []
        switch(type) {
            case "book":
                posts = (await getCollection('books'));
                break
            case "note":
                posts = (await getCollection('garden'));
                break
            case "link":
                posts = (await getCollection('links'));
                break
            case "blog":
                posts = (await getCollection('blog'));
                break;
        }

        tags = getTags(posts);

        const tagPages = tags.map(tag => {
            return {
                params: {type: type, tag: tag},
                props: {
                    posts: posts.filter(post => post.data.tags?.includes(tag)),
                }
            }
        })

        cats.push(...tagPages)
    }

    return cats;

}

const {type, tag} = Astro.params;
const {posts} = Astro.props;
const crumbs = [
    {text: `type: ${type}`, url: `/garden/type/${type}`},
    {text: `tag: ${tag}`}
]
---


<GardenLayout>
    <GardenBreadcrumbs pages={crumbs} />

    <div slot="garden-main">
        <p>{posts.length} entries</p>
        <AllPreviews type={type} posts={posts} />

    </div>
    <div slot="garden-aside">

    </div>
</GardenLayout>


<style>
    h1 {
        text-align: center;
        margin-bottom: 2rem;
    }


    .tag {
        font-size: .8rem;

        font-variant: small-caps;
        display: inline-block;
        align-items: center;

        background-color: var(--tag);
        color: white;
        padding: 0 5px;
        border-radius: 5px;
    }

    .tag--nf {
        background-color: var(--big-blue);
    }

    .tag--f {
        background-color: var(--tag);
    }

    .tag--c {
        background-color: rgba(var(--gray), 1);
    }

    .tag--m {
        background-color: var(--yellow);
    }
</style>
