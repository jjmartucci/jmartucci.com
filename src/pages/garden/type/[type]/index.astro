---
import {getCollection} from "astro:content";
import GardenLayout from "../../../../layouts/GardenLayout.astro";
import GardenBreadcrumbs from "../../../../components/GardenBreadcrumbs/GardenBreadcrumbs.astro";
import {getTags} from "../../../../utils/getAllGardenContent";
import BookPreview from "@components/GardenPreviews/BookPreview.astro"
import LinkPreview from "../../../../components/GardenPreviews/LinkPreview.astro";
import NotePreview from "../../../../components/GardenPreviews/NotePreview.astro";
import BlogPreview from "../../../../components/GardenPreviews/BlogPreview.astro";

export async function getStaticPaths() {
    const types = ['book', 'blog', 'note', 'blog', 'recipe', 'link', 'research']

    const cats = [];
    for (const type of types) {
        let posts = []
        switch(type) {
            case "book":
                posts = (await getCollection('books'));
                break
            case "note":
                posts = (await getCollection('garden'));
                break
            case "link":
                posts = (await getCollection('links'));
                break
            case "blog":
                posts = (await getCollection('blog'))
                    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
                    .filter((post) => !post.data.draft)
                break;
        }

        const page = {
            params: {type: type},
            props: {
                posts: posts,
                tags: getTags(posts),
            }
        }
        cats.push(page)
    }

    return cats;

}

const {type} = Astro.params;
const {tags, posts} = Astro.props;

const crumbs = [{text: `type: ${type}`}]
---


<GardenLayout>
    <GardenBreadcrumbs pages={crumbs} />

    <div slot="garden-main">
        {type === "book" && posts.map(post => (<BookPreview book={post} />))}
        {type === "link" && posts.map(post => (<LinkPreview link={post} />))}
        {type === "note" && posts.map(post => (<NotePreview note={post} />))}
        {type === "blog" && posts.map(post => (<BlogPreview post={post} />))}

    </div>
    <div slot="garden-aside">
        <h2>Tags</h2>
        <ul>
        {tags.map(tag => <li><a href={`/garden/type/${type}/${tag}`}>{tag}</a></li>)}
        </ul>
    </div>
</GardenLayout>


<style>
    h1 {
        text-align: center;
        margin-bottom: 2rem;
    }


    .tag {
        font-size: .8rem;

        font-variant: small-caps;
        display: inline-block;
        align-items: center;

        background-color: var(--tag);
        color: white;
        padding: 0 5px;
        border-radius: 5px;
    }

    .tag--nf {
        background-color: var(--big-blue);
    }

    .tag--f {
        background-color: var(--tag);
    }

    .tag--c {
        background-color: rgba(var(--gray), 1);
    }

    .tag--m {
        background-color: var(--yellow);
    }
</style>
